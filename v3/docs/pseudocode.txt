Let's design a data structure

System prompt object
Name
Text

EXAMPLE
'''
You are a business researcher. Your task is to research software development companies to determine whether they fit certain criteria to determine if the owner is likely to want to sell the company.

You have the following tools at your disposal:

Perplexity Web Search
Perplexity is your general-purpose web search tool. 
<<perplexity_search: search terms>>

FireCrawl Text Scrape
FireCrawl allows you to scrape the full text of a web page
<<firecrawl_text_scrape: www.google.com>>

FireCrawl Link Scrape
The link scrape tool gives you a list of all the links on a page
<<firecrawl_link_scrape: www.gametrailers.com>>

PhantomBuster
This tool lets you view private LinkedIn information
<<phantombuster: www.linkedin.com/apple>>

Each tool use has a cost. 
Perplexity search costs $.01. Firecrawl text scrape and link scrape cost $.05. PhantomBuster costs $.10.
Your goal is to complete your research while minimizing costs. You should therefore primarily use perplexity_web_search, and only use the others when necessary.

The company you are researching is {company}.

You should respond in one of three ways. With a tool use request if you need more information, with a positive answer to the criterion, or a negative answer to the criterion. Indicate the response type in the first line of your response, like this "TYPE: tool_use", "TYPE: positive result", "TYPE: negative result"
The second line is the answer itself, eg, "Yes", "No", "47", "San Francisco, California", etc
The third line is the start of your analysis and explanation of your decision.

Here are some examples

EXAMPLE #1
Criterion: The company is a software publisher

RESPONSE
TYPE: tool_use
perplexity_search: does apple inc primarily publish software products for sale?
description: I need to figure out if apple publishes software. I'll do a perplexity search.

EXAMPLE #2
Criterion: The company is a software publisher
TYPE: negative result
answer: No
description: Although Apple does publish and sell software, their main business is selling hardware in the form of the iPhone and MacBook and iMac computers.

'''

Criterion object
Name: string
Text: string
Answer format: yes/no, number, string

EXAMPLE
Name="Software Publisher"
'''
Your task is to determine whether the company publishes software. You will primarily learn this from the company's website.

You know the following about the company:
'''



Context object


print("SmartBroker v0.7")
companies = getCompaniesFromJSON(companiesRange, "company_info.json")
companiesRangeTuple = getRangeFromUI()
autoResearch = getAutoResearchFromUI()
startCriterion = getCriterionFromUI()
companiesIterator = companiesRangeTuple[0]
criterionIterator = startCriterion
input("press start to begin")
loadSystemPrompt()
sendSystemPrompt()
context = {}



while(true):
	for criterionIterator in criteria:
		for companiesIterator in companies:
			investigate(companies[companiesIterator], criterion[criterionIterator])
			companiesIterator++
		criterionIterator++


def investigate(company, criterion):
	finished = False
	prompt = ""
	companyInformation = getEverythingWeKnowAboutThisCompany(company)
	companyInformation = companyInformation.toParagraph()
	perplexity_results = perplexitySearch(criterion["first search"])
	prompt += systemPrompt
	prompt += criterion["text"]
	prompt += companyInformation
	prompt += perplexity_results
	while(not finished):
		claude_response = parseResponse(sendToClaude(prompt))
		switch(claude_response["type"]):
			"perplexity":
				prompt += perplexity_search(claude_response["text"])
			"firecrawl_text":
				prompt += firecrawl_text(claude_response["text"])
			"firecrawl_links":
				prompt += firecrawl_links(claude_response["text"])
			"phantombuster":
				prompt += phantombuster(claude_response["text"])
			"disqualified":
				//remove company from companies
				company.disqualified = claude_response["text"]
				finished = True
			"qualified":
				//add the true fact we learned to the company object
				company.facts += claude_response["text"]
				//store the fact that we passed this criterion as a bool
				company[criterion] = True
				//end the investigation
				finished = True


def parseResponse(response):
	text = response[0]["content"]
	return {"type":text.firstLine, "text":text.remaining}

should we perform the first search without Claude?
Sure why not.


REQUIREMENTS

When the program starts:
1) it tells me how many companies were loaded from data. 
2) it shows me the research template (a system prompt plus criteria)
3) it then presents me with a menu of options and waits for me to enter a number:
	1. Perform research
	2. View results
	3. Edit options

**Perform Research**
it waits for me to input a range of companies (1-100, 200-300, etc)
it asks me to choose a criterion
it asks if I want to do the remaining criterion after it finishes with the first.
it asks me what verbosity of output to use, on a scale of 1 to 3. If I enter nothing, it defaults to 1. 
1: minimal - show the company, the criterion, tool uses, and final answers
2: all of the above, plus the results from the tool uses
3: all of the above plus the full prompts being sent to claude
it asks if I want it to wait between tool uses. Nothing for no, 1 for yes.
if I said yes, then when it shows a proposed tool use, I can press enter to approve it. OR, I can type an alternate tool use into the terminal, eg "perplexity_search: how old is John Goodman?". If I do, it uses the search I entered instead of the one proposed by Claude. 

**View Results**
It prints a table with columns for "Company" and each of the criteria.
For each company, a column shows either a "+" for a positive result, a "-" for a negative result, a "?" if the result could not be determined, and nothing if the research hasn't been performed yet. 
The table shows 20 rows at a time. 
It waits for user input. The user can input 1 to return to the previous menu, 2 to page to the previous 20 companies, and 3 to page to the next 20 companies. 

**Edit Options**
This displays the name of the current template and presents a menu:
1. Edit templates
2. Edit system prompt
3. Edit criteria

*Edit Templates*
Displays the current template, lists all templates, and shows a menu:
1. Switch template
2. Create new template
3. Delete template

Switching template lets you change which template the application will use for research.
Create new template lets you create a new template and give it a name. It does not automatically switch to it.
Delete template lets you delete a template from a list of all the templates.

*Edit system prompt*
Lets you edit the system prompt for the current template

*Edit Criteria*
Lists the criteria and lets you add, edit, and delete them.
 